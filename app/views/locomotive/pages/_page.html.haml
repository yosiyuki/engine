- if page.not_found?
  %li.sep &nbsp;

%li{ :id => "item-#{page.id}", :class => "page #{css_for_page(page)}" }

  - children = can?(:manage, page) ? page.children : page.children.find_all { |p| !p.templatized? }

  - with_children = !children.empty?

  - if not page.index? and with_children
    = page_toggler(page)

  .inner

    - unless page.index_or_not_found?
      %em

    = link_to truncate(page.title, :length => 80), edit_page_url(page)

    - if page.templatized?
      %i.icon-cog

    - if page.redirect?
      %i.icon-share-alt

    - unless page.default_response_type?
      %span.response-type= page_response_type_to_string(page)

    - unless page.translated?
      %span.untranslated= t('locomotive.shared.list.untranslated')

    .more
      %span!= t('.updated_at')
      = l page.updated_at, :format => :short

      - if !page.index_or_not_found? && can?(:manage, page)
        = link_to_icon :trash, page_url(page), :class => 'remove', :data => { :confirm => t('locomotive.messages.confirm') }, :method => :delete

  - if with_children
    %ul{ :id => "folder-#{page._id}", :class => "page folder depth-#{(page.depth || 0) + 1}", :'data-url' => sort_page_url(page), :style => "display: #{cookies["folder-#{page._id}"] || 'block'}" }

      = render children